name: 'Run terraform'
on:
  workflow_call:
    inputs:
      dir_name:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_key:
        description: 'Specifies the Terraform state file name for this plan. Workflow artifact will use same name'
        required: true
        type: string
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT:
        required: true
jobs:
  tf_plan:
    name: 'TF plan'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: ${{ github.event_name == 'pull_request' }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.dir_name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Configure GCP credentials
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
          create_credentials_file: true
          service_account: '${{ secrets.SERVICE_ACCOUNT }}'    
          token_format: "access_token"
          access_token_lifetime: "120s"

      # - name: Terraform Init
      #   id: init
      #   run: terraform init -input=false

      # - name: Plan Terraform
      #   id: plan
      #   continue-on-error: true
      #   run: |
      #     terraform plan -input=false -no-color -out=tfplan \
      #     && terraform show -no-color tfplan
          
  tf_apply:
    name: 'Init, Plan and apply'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: ${{ github.event_name == 'push' }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.dir_name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      # - name: Configure GCP credentials
      #   id: auth
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
      #     create_credentials_file: true
      #     service_account: '${{ secrets.SERVICE_ACCOUNT }}'    
      #     token_format: "access_token"
      #     access_token_lifetime: "120s"

      # - name: Terraform Init
      #   id: init
      #   run: terraform init -input=false

      # - name: Plan Terraform
      #   id: plan
      #   continue-on-error: true
      #   run: |
      #     terraform plan -input=false -no-color -out=tfplan \
      #     && terraform show -no-color tfplan

      # - name: Apply Terraform
      #   if: steps.plan.outcome == 'success'
      #   id: apply
      #   continue-on-error: true
      #   run: |
      #     terraform apply \
      #       -input=false \
      #       -no-color \
      #       "tfplan"